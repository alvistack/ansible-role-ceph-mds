---

# (c) Wong Hoi Sing Edison <hswong3i@pantarei-design.com>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- name: include default variables
  include_vars: "../vars/main.yml"

- name: include release specific variables
  include_vars: "{{ _loop_var }}"
  loop: "{{ query('first_found', _params) }}"
  loop_control:
    loop_var: _loop_var
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "../vars"
      skip: true

- name: include release specific tasks
  include_tasks: "{{ _loop_var }}"
  loop: "{{ query('first_found', _params) }}"
  loop_control:
    loop_var: _loop_var
  vars:
    _params:
      files:
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_distribution | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}-{{ ansible_distribution_major_version | lower }}.yml"
        - "{{ ansible_os_family | lower }}.yml"
      paths:
        - "."
      skip: true

- name: prepare directories
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0755') }}"
    state: "{{ item.state | default('directory') }}"
  loop:
    - { dest: "/etc/ceph" }
    - { dest: "/lib/systemd/system" }
    - { dest: "/lib/systemd/system/ceph-mds.target.d" }
    - { dest: "/var/lib/ceph/mds", owner: "ceph", group: "ceph" }

- name: touch files
  copy:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
    content: ""
    force: false
  loop:
    - { dest: "/etc/ceph/ceph.conf", owner: "ceph", group: "ceph" }

- name: tweak settings in ini files
  ini_file:
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    state: "{{ item.state }}"
    path: "/etc/ceph/ceph.conf"
    mode: "0644"
  loop: "{{ ceph_mds_config }}"
  notify:
    - ceph_mds | systemctl restart ceph-mds.target

- name: prepare files
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
    state: "{{ item.state | default('file') }}"
  loop:
    - { dest: "/etc/ceph/ceph.conf", owner: "ceph", group: "ceph" }
  notify:
    - ceph_mds | systemctl restart ceph-mds.target

- name: create manager keyring
  shell: |
    set -euxo pipefail
    mkdir -p /var/lib/ceph/mds/ceph-{{ inventory_hostname }}
    chown ceph:ceph /var/lib/ceph/mds/ceph-{{ inventory_hostname }}
    chmod 0755 /var/lib/ceph/mds/ceph-{{ inventory_hostname }}
    ceph \
      auth get-or-create mds.{{ inventory_hostname }} \
      mon 'allow profile mds' \
      osd 'allow *' \
      mds 'allow *' \
      --out-file /var/lib/ceph/mds/ceph-{{ inventory_hostname }}/keyring
    chown ceph:ceph /var/lib/ceph/mds/ceph-{{ inventory_hostname }}/keyring
    chmod 0400 /var/lib/ceph/mds/ceph-{{ inventory_hostname }}/keyring
  args:
    executable: "/bin/bash"
    creates: "/var/lib/ceph/mds/ceph-{{ inventory_hostname }}/keyring"
  register: result
  changed_when: result is not succeeded
  notify:
    - ceph_mds | systemctl restart ceph-mds.target

- name: tweak settings in ini files
  ini_file:
    section: "{{ item.section }}"
    option: "{{ item.option }}"
    value: "{{ item.value }}"
    state: "{{ item.state }}"
    path: "/lib/systemd/system/ceph-mds@.service"
    no_extra_spaces: true
    mode: "0644"
  loop:
    - { state: "present", section: "Service", option: "ProtectClock", value: "false" }
    - { state: "present", section: "Service", option: "ProtectHostname", value: "false" }
    - { state: "present", section: "Service", option: "ProtectKernelLogs", value: "false" }
    - { state: "present", section: "Service", option: "RestrictSUIDSGID", value: "false" }
  notify:
    - ceph_mds | systemctl daemon-reload
    - ceph_mds | systemctl restart ceph-mds.target

- name: prepare files
  file:
    dest: "{{ item.dest }}"
    owner: "{{ item.owner | default('root') }}"
    group: "{{ item.group | default('root') }}"
    mode: "{{ item.mode | default('0644') }}"
    state: "{{ item.state | default('file') }}"
  loop:
    - { dest: "/lib/systemd/system/ceph-mds.target" }
    - { dest: "/lib/systemd/system/ceph-mds@.service" }
    - { dest: "/var/lib/ceph/mds/ceph-{{ inventory_hostname }}/keyring", owner: "ceph", group: "ceph", mode: "0400" }
  notify:
    - ceph_mds | systemctl daemon-reload
    - ceph_mds | systemctl restart ceph-mds.target

- name: flush handlers
  meta: flush_handlers

- name: "systemctl start ceph-mds@{{ inventory_hostname }}.service"
  shell: |
    set -euxo pipefail
    systemctl enable ceph-mds@{{ inventory_hostname }}.service
    systemctl start ceph-mds@{{ inventory_hostname }}.service
  args:
    executable: "/bin/bash"
  changed_when: false
  failed_when: false

- name: systemctl start ceph-mds.target
  service:
    name: "ceph-mds.target"
    state: "started"
    enabled: true
  changed_when: false
  failed_when: false

- name: ceph fs new
  ceph_fs:
    name: "{{ item.name }}"
    metadata: "{{ item.metadata }}"
    data: "{{ item.data }}"
    max_mds: "{{ item.max_mds | default(omit) }}"
    state: "present"
  loop: "{{ ceph_mds_cephfs }}"
  when: inventory_hostname == ansible_play_hosts[0]
  changed_when: false
  failed_when: false
